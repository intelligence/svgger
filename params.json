{"google":"UA-2869280-15","tagline":"Convert img tagged SVG images to inline SVG","body":"**Svgger** is a small bit of code which converts the img tagged SVG file to inline SVG(HTML5 SVG tag). It also remembers attributes which you gave to the img tag and you can overwrite SVG attributes in the same time.\r\n\r\nHere's a code example. First you create basic img tag with src to SVG image and give it a id and class\r\n\r\n`<img id=\"im-id\" class=\"and-im-class\" x=\"200px\" src=\"img/svgged-img.svg\">`\r\n\r\nWhen Svgger do its magic you get this\r\n\r\n`<svg xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"im-id\" x=\"200px\" y=\"0px\" width=\"60px\" height=\"60px\" class=\"and-im-class\"></svg>`\r\n\r\nIt imports id and class properties and overwrites x attribute. Simple.\r\n\r\n## Benefits of the inline SVG\r\n\r\nSVG object is namespaced and it is difficult to give it styles with CSS. Of course you can do it but you need to write code inside the SVG, inline or external CSS file. It's crazy!\r\n\r\nSVG have child tags like g, circle and rect. Would be nice if you could style those with CSS e.g per page. With inline SVG you can.\r\n\r\nCode example. If you style the first code bit above with this\r\n\r\n`#im-id circle { fill: orange; }`\r\n\r\nIt won't work because the SVG namespacing. If you let Svgger do it's job(or copy SVG code manually) the styling works. Imagine how you now could change SVG circle fill color by page, by section etc.\r\n\r\n`body#page-1 #im-id circle { fill: orange; }`\r\n\r\n`body#page-2 #im-id circle { fill: orange; }`\r\n\r\n`body#page-2 section #im-id circle { fill: orange; }`\r\n\r\n## Usage\r\n\r\nIt's simple. Just include jQuery and Svgger before the closing </head> and you're ready to go. Check out the package for example.\r\n\r\nHave fun!","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Svgger"}